library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(DT)
participation <- reactive({
if (input$by_gender) {
data <- group_by(data, Class, gender)
} else {
data <- group_by(data, Class)
}
data <- summarize(
data,
raisedhands = mean(raisedhands),
VisITedResources = mean(VisITedResources),
AnnouncementsView = mean(AnnouncementsView),
Discussion = mean(Discussion)
)
})
# Process and store data
data <- data.table::fread("data/xAPI-Edu-Data.csv")
data <- data.table::fread("xAPI-Edu-Data.csv")
runApp()
runApp()
runApp()
runApp()
participation <- reactive({
if (input$by_gender) {
data <- group_by(data, Class, gender)
} else {
data <- group_by(data, Class)
}
data <- summarize(
data,
raisedhands = mean(raisedhands),
VisITedResources = mean(VisITedResources),
AnnouncementsView = mean(AnnouncementsView),
Discussion = mean(Discussion)
)
})
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(DT)
participation <- reactive({
if (input$by_gender) {
data <- group_by(data, Class, gender)
} else {
data <- group_by(data, Class)
}
data <- summarize(
data,
raisedhands = mean(raisedhands),
VisITedResources = mean(VisITedResources),
AnnouncementsView = mean(AnnouncementsView),
Discussion = mean(Discussion)
)
})
participation <- reactive({
if (input$by_gender) {
data <- group_by(data, Class, gender)
} else {
data <- group_by(data, Class)
}
data <- data.table::fread("data/xAPI-Edu-Data.csv")
# Finds participation averages
participation <- reactive({
if (input$by_gender) {
data <- group_by(data, Class, gender)
} else {
data <- group_by(data, Class)
}
participation <- reactive({
if (input$by_gender) {
data <- group_by(data, Class, gender)
} else {
data <- group_by(data, Class)
}
data <- summarize(
data,
raisedhands = mean(raisedhands),
VisITedResources = mean(VisITedResources),
AnnouncementsView = mean(AnnouncementsView),
Discussion = mean(Discussion)
)
})
participation <- reactive({
if (input$by_gender) {
data <- group_by(data, Class, gender)
} else {
data <- group_by(data, Class)
}
data <- summarize(
data,
raisedhands = mean(raisedhands),
VisITedResources = mean(VisITedResources),
AnnouncementsView = mean(AnnouncementsView),
Discussion = mean(Discussion)
)
})
participation <- reactive({
if (input$by_gender) {
data <- group_by(data, Class, gender)
} else {
data <- group_by(data, Class)
}
data <- summarize(
data,
raisedhands = mean(raisedhands),
VisITedResources = mean(VisITedResources),
AnnouncementsView = mean(AnnouncementsView),
Discussion = mean(Discussion)
)
})
shiny::runApp()
